{"version":3,"sources":["webpack:///./src/views/Particle.vue?8e9a","webpack:///./src/views/Particle.vue","webpack:///./node_modules/d3-force/src/lcg.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./src/assets/float.ts","webpack:///./src/views/Particle.vue?9cc1","webpack:///./src/views/Particle.vue?b791"],"names":["id","width","height","a","c","m","s","d","x","y","initialRadius","initialAngle","Math","PI","sqrt","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","Map","stepper","timer","step","event","dispatch","random","lcg","tick","call","stop","iterations","i","node","n","nodes","length","undefined","k","forEach","force","fx","vx","fy","vy","initializeNodes","index","isNaN","radius","angle","cos","sin","initializeForce","initialize","restart","_","arguments","randomSource","name","delete","set","get","find","dx","dy","d2","closest","Infinity","on","this","_x","_y","cover","tree","parent","xm","ym","xp","yp","right","bottom","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","next","Array","addAll","xz","yz","floor","z","visit","push","x2","y2","q","x3","y3","quads","pop","retainer","previous","removeAll","remove","size","child","callback","defaultX","defaultY","quadtree","Quadtree","NaN","leaf_copy","copy","treeProto","prototype","source","target","add","extent","root","visitAfter","strengths","strength","constant","distanceMin2","distanceMax2","theta2","accumulate","apply","quad","weight","abs","value","w","l","jiggle","_nodes","_random","distanceMin","distanceMax","theta","radii","xi","yi","ri","ri2","prepare","rj","r","ALPHAMIN","word","idx","ox","oy","text","fontSize","canvas","html","container","append","selectAll","enter","classed","attr","style","simulationGenerator","vertex","url","then","console","log","err","processed","map","datum","render"],"mappings":"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","file":"js/chunk-fdfc5014.32c5faa1.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Particle.vue?vue&type=style&index=0&id=455fbf54&lang=scss\"","/* eslint-disable */\r\n<template>\r\n  <div>\r\n    <svg id=\"particle-svg\" :width=\"width\" :height=\"height\"></svg>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\n/* eslint-disable */\r\nimport { Vue } from \"vue-class-component\"\r\nimport * as d3 from \"d3-fetch\"\r\nimport { simulate } from \"@/assets/float\"\r\nimport { Word } from \"@/assets/types\"\r\nexport default class ParticleView extends Vue {\r\n  public readonly width = 800\r\n  public readonly height = 520\r\n  mounted() {\r\n    let url = './dataset/layout/layout_xmas.json'\r\n    d3.json(url).then((d: any) => {\r\n        console.log(d, '??')\r\n        let data = d as Word[]\r\n        simulate(data, this.width, this.height)\r\n    }, (err: any) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.particle-g {\r\n  text-anchor: middle;\r\n  font-family: NotoSans;\r\n}\r\n</style>\r\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","/* eslint-disable */\r\n/**\r\n * doc comment for float.ts.\r\n * force simulation\r\n * @packageDocumentation\r\n */\r\nimport * as d3 from 'd3-selection'\r\nimport * as d3Force from 'd3-force'\r\nimport * as d3File from 'd3-fetch'\r\nimport { Word } from '@/assets/types'\r\nconst ALPHAMIN = 0.1\r\ninterface SimulationData {\r\n    ox: number,\r\n    oy: number,\r\n    radius: number,\r\n    width: number,\r\n    height: number,\r\n    x?: number,\r\n    y?: number\r\n}\r\ntype ParticleSelection = d3.Selection<SVGTextElement, Particle, d3.BaseType, Particle>\r\nclass Particle implements SimulationData, d3Force.SimulationNodeDatum {\r\n    ox: number\r\n    oy: number\r\n    radius: number\r\n    width: number\r\n    height: number\r\n    x: number\r\n    y: number\r\n    index: number\r\n    text: string\r\n    fontSize: number\r\n    constructor(word: Word, idx: number) {\r\n        this.x = this.ox = word.x!\r\n        this.y = this.oy = word.y!\r\n        this.radius = word.height!/3 //Math.sqrt((word.width!/2)**2+ (word.height!/2)**2) / 2\r\n        this.width = word.width!\r\n        this.height = word.height!\r\n        this.index = idx\r\n        this.text = word.text!\r\n        this.fontSize = word.size!\r\n    }\r\n}\r\n\r\nlet plotInitialText = function (data: Particle[]) {\r\n    let canvas = d3.select('#particle-svg').html('')\r\n    let container = canvas.append('g')\r\n      .selectAll('text')\r\n      .data(data)\r\n      .enter()\r\n      .append('g')\r\n      .classed('particle-g', true)\r\n      .attr('transform', (d: Particle) => `translate(${d.x}, ${d.y})`)\r\n    container.append('text')\r\n      .text((d: Particle) => d.text)\r\n      .style('font-size', (d: Particle) => d.fontSize)\r\n}\r\n\r\nlet simulationGenerator = function (data: Particle[], strength: number) {\r\n    let container = d3.selectAll('.particle-g') as ParticleSelection\r\n    return d3Force.forceSimulation()\r\n    .nodes(data)\r\n    .force('forceManyBody', d3Force.forceManyBody()\r\n        .strength(strength))\r\n    .force('forceColide', d3Force.forceCollide()\r\n        .radius((node: d3Force.SimulationNodeDatum, idx: number) => {\r\n            let vertex = node as Particle\r\n            return vertex.radius\r\n        }))\r\n    .on('tick', function() {\r\n       container\r\n          .attr('transform', (d: Particle) => `translate(${d.x}, ${d.y})`)\r\n    })\r\n    .alphaMin(ALPHAMIN)\r\n    .on('end', function() {\r\n        simulationGenerator(data, (Math.random()-0.5)*2)\r\n    })\r\n}\r\n\r\nlet createSimulation = function (data: Particle[]) {\r\n    plotInitialText(data)\r\n    let container = d3.selectAll('.particle-g') as ParticleSelection\r\n    let simulation = d3Force.forceSimulation()\r\n        .nodes(data)\r\n        .force('forceManyBody', d3Force.forceManyBody()\r\n            .strength(2))\r\n        .force('forceColide', d3Force.forceCollide()\r\n            .radius((node: d3Force.SimulationNodeDatum, idx: number) => {\r\n                let vertex = node as Particle\r\n                return vertex.radius\r\n            }))\r\n        .alphaMin(ALPHAMIN)\r\n        .on('tick', function() {\r\n           container\r\n              .attr('transform', (d: Particle) => `translate(${d.x}, ${d.y})`)\r\n        })\r\n        .on('end', function() {\r\n            simulationGenerator(data, 2)\r\n        })\r\n}\r\n\r\nexport let simulate = function (data: Word[], width: number, height: number){\r\n    let url = './dataset/layout/layout_xmas.json'\r\n    d3File.json(url).then((d: any) => {\r\n        console.log(d, 'hello test')\r\n        let data = d as Word[]\r\n    }, (err: any) => {\r\n      console.log(err)\r\n    })\r\n    console.log(data)\r\n    let processed = data.map((d: Word, idx: number) => {\r\n        let datum = d\r\n        datum.x = d.x! + width / 2\r\n        datum.y = d.y! + height / 2\r\n        return new Particle(datum, idx)\r\n    })\r\n    createSimulation(processed)\r\n}","\r\n/* eslint-disable */\r\nimport { Vue } from \"vue-class-component\"\r\nimport * as d3 from \"d3-fetch\"\r\nimport { simulate } from \"@/assets/float\"\r\nimport { Word } from \"@/assets/types\"\r\nexport default class ParticleView extends Vue {\r\n  public readonly width = 800\r\n  public readonly height = 520\r\n  mounted() {\r\n    let url = './dataset/layout/layout_xmas.json'\r\n    d3.json(url).then((d: any) => {\r\n        console.log(d, '??')\r\n        let data = d as Word[]\r\n        simulate(data, this.width, this.height)\r\n    }, (err: any) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n","import { render } from \"./Particle.vue?vue&type=template&id=455fbf54\"\nimport script from \"./Particle.vue?vue&type=script&lang=ts\"\nexport * from \"./Particle.vue?vue&type=script&lang=ts\"\n\nimport \"./Particle.vue?vue&type=style&index=0&id=455fbf54&lang=scss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}